<?php//// Менеджер фотографий//class M_Foto {		private static $instance;	private $msql; 				// драйвер БД	private $mUsers; 			// модуль работы с пользователем   	//	//Получение единственного экземпляра (одиночка)	//	public static function Instance() 	{		if (self::$instance == null)		self::$instance = new M_Foto();				return self::$instance;	}		public function __construct()	{	$this->msql = MSQL::instance();			$this->mUsers = M_Users::Instance();	}		//	// Добавление фотографии	//	public function AddFoto($user)	{				if($_FILES['userfile']['error'] ==0){								//проверяем создана ли папка фоток пользователя создаем ее и папку мини фоток				if (!is_dir($user['dirUs'])) {mkdir($user['dirUs']); }					if (!is_dir($user['dirUs'].'/mini')) {mkdir($user['dirUs'].'/mini'); }										//var_dump($_FILES);			include_once("M/img_resize.php");									foreach ($_FILES as $file){					if($file['name'] != ''){						//проверяем тип файлов					if (($file['type'] != 'image/jpeg') AND ($file['type'] != 'image/pjpeg')  AND ($file['type'] != 'image/gif') AND ($file['type'] != 'image/png') ){						return 55;					}					$t = $file['tmp_name'];					$n = $file['name'];							//сделать проверку на русские символы и переместить фото					if (preg_match("/[".chr(0x7F)."-".chr(0xff)."]/",$n)) $n =md5(rand()).'.jpg'; //изменяем имя файла на произвольное										move_uploaded_file($t,$user['dirUs'].'/'.$n);										//преобразуем в требуемые размеры					img_resizeFoto($user['dirUs'].'/'.$n,$user['dirUs'].'/'.$n, 600, 600,  70, 0xFFFFF0, 0);											//создаем миниатюры										img_resize($user['dirUs'].'/'.$n, $user['dirUs'].'/mini/'.$n, 100, 100,  70, 0xFFFFF0, 0);					//Изменение визитной фотографии пользователя и создание миниатюр					$this->VisFoto($user,$n);				}			}							return true;		}else{			return false;		}	}		//	// Добавление/изменение фотографии у маски	//	public function AddFoto2Mask($user)	{				if($_FILES['userfile']['error'] ==0){								foreach ($_FILES as $file){					if($file['name'] != ''){						//проверяем тип файлов					if (($file['type'] != 'image/jpeg') AND ($file['type'] != 'image/pjpeg')  AND ($file['type'] != 'image/gif') AND ($file['type'] != 'image/png') ){						return 55;					}					$t = $file['tmp_name'];					$n = $file['name'];					if($user['MaskFoto'] == ''){						$n = md5(rand()).'.jpg'; //изменяем имя файла на произвольное					}else{						$n = explode("/",$user['MaskFoto']);	//$user['MaskFoto']; //изменяем имя файла на произвольное						$n = $n['1'];					}					//сделать проверку на русские символы и переместить фото									move_uploaded_file($t,$GLOBALS['dir'].'/MaskFoto/'.$n);					include_once("M/img_resize.php");					//создаем миниатюры					//преобразуем в требуемые размеры					img_resize($GLOBALS['dir'].'/MaskFoto/'.$n,$GLOBALS['dir'].'/MaskFoto/'.$n, 100, 100,  70, 0xFFFFF0, 0);					//добавление логотипа маски					$this->AddLogo($GLOBALS['dir'].'/MaskFoto/'.$n);										//Изменение фотграфии маски у пользователя 					$this->mUsers->ChangeUsersSettings($user['id_user'],'MaskFoto','MaskFoto/'.$n);				}			}							return true;		}else{			return false;		}	}	//	// Добавление/изменение баннеров	//	public function AddBanner($id_org,$id_forum)	{		if($_FILES['userfileComment']['error'] ==0){			foreach ($_FILES as $file){					if($file['name'] != ''){						//проверяем тип файлов					if (($file['type'] != 'image/gif')){						return 55;					}					$t = $file['tmp_name'];					//$n = $file['name'];										$n = 'banner.gif';										//$n = md5(rand()).'.jpg'; //изменяем имя файла на произвольное					//сделать проверку на русские символы и переместить фото					//if (preg_match("/[".chr(0x7F)."-".chr(0xff)."]/",$n)) 					//$n =md5($n).'.jpg'; //изменяем имя файла на произвольное										//проверяем, есть ли каталог в нужной нам организации/теме					if (!is_dir($GLOBALS['dir'].'/BannerInThema/'.$id_org.'/'.$id_forum)) {						//создаем каталог						mkdir($GLOBALS['dir'].'/BannerInThema/'.$id_org);						mkdir($GLOBALS['dir'].'/BannerInThema/'.$id_org.'/'.$id_forum);					}					//проверяем, если файла нету, тогда создаенм					//if(!is_file($GLOBALS['dir'].'/AllFoto/'.date('Y-m-d').'/'.$n)) {											//сделать проверку на русские символы и переместить фото						move_uploaded_file($t,$GLOBALS['dir'].'/BannerInThema/'.$id_org.'/'.$id_forum.'/'.$n);												//include_once("M/img_resize.php");						//преобразуем в требуемые размеры						//img_resizeFoto($GLOBALS['dir'].'/AllFoto/'.date('Y-m-d').'/'.$n,$GLOBALS['dir'].'/AllFoto/'.date('Y-m-d').'/'.$n, 450, 450,  70, 0xFFFFF0, 0);					//}				}			}			//возвращаем путь к фотке				return 'BannerInThema/'.$id_org.'/'.$id_forum.'/'.$n;		}else{			return false;		}	}		//	// Добавление/изменение фотографии в комментарии	//	public function AddFoto2comment($id_user="0",$id_forum="0",$where='',$size='')	{		//$where - в какую папку сохранять, по умолчанию в /AllFoto/		//$size - размер требуемой фотки, по умолчанию 508		if($where==''){ 			$where = 'AllFoto/'.date('Y-m-d');		}		if($size==''){ 			$size = 508;		}						if($_FILES['userfileComment']['error'] ==0){							foreach ($_FILES as $file){			//echo '111qw';				if($file['name'] != ''){						//die($file['type']);					//проверяем тип файлов					//$file['type'] =  strtolower($file['type']);						if (($file['type'] != 'image/jpeg') AND  ($file['type'] != 'image/pjpeg') AND($file['type'] != 'image/gif') AND ($file['type'] != 'image/png') AND ($file['type'] != 'image/x-png')){						return 55;					}else{						$type = "jpg";						if($file['type'] == 'image/gif'){							$type = "gif";						}elseif(($file['type'] == 'image/png') or ($file['type'] == 'image/x-png')) {							$type = "png";						}					}					$t = $file['tmp_name'];					$n = strtolower($file['name']);										//$n = $file['name'];										//$n = md5(rand()).'.jpg'; //изменяем имя файла на произвольное					//сделать проверку на русские символы и переместить фото					if (preg_match("/[".chr(0x7F)."-".chr(0xff)."]/",$n)) 					$n =md5($n).$type; //изменяем имя файла на произвольное					//$n =md5($n).'.jpg'; //изменяем имя файла на произвольное										//для замены расширения					$n1 = explode(".",$n);					$n = $n1['0'].".".$type;										$n =$type."-".$id_user."-".$id_forum."-".$n; //изменяем имя файла на произвольное						//проверяем, есть ли каталог, на сегодняшнюю дату					if (!is_dir($GLOBALS['dir'].'/'.$where)) {						//создаем каталог						mkdir($GLOBALS['dir'].'/'.$where);					}					//проверяем, если файла нету, тогда создаенм					if(!is_file($GLOBALS['dir'].'/'.$where.'/'.$n)) {											//сделать проверку на русские символы и переместить фото						move_uploaded_file($t,$GLOBALS['dir'].'/'.$where.'/'.$n);												if(!function_exists('img_resizeFoto')){							include_once("M/img_resize.php");						}						//преобразуем в требуемые размеры						img_resizeFoto($GLOBALS['dir'].'/'.$where.'/'.$n,$GLOBALS['dir'].'/'.$where.'/'.$n, $size, $size,  70, 0xFFFFF0, 0);					}				}			}			//возвращаем путь к фотке				return $where.'/'.$n;		}else{			return false;		}	}		//	// добавление логотипа на маску	//	public function AddLogo($img)	{		// исходное изображение		//$img="pic1.jpg";		// imagecreatefrompng - создаёт новое изображение из файла или URL		// водный знак		$wm=imagecreatefrompng($GLOBALS['dir'].'/Foto/logoM.png');		// imagesx - получает ширину изображения		$wmW=imagesx($wm);		// imagesy - получает высоту изображения		$wmH=imagesy($wm);		// imagecreatetruecolor - создаёт новое изображение true color		$image=imagecreatetruecolor($wmW, $wmH);		// eregi - совпадение с регулярным выражением без учёта регистра символов		// выясняем расширение изображения на которое будем накладывать водный знак		$image=imagecreatefromjpeg($img);		/*if(eregi('.gif',$img))		{		  $image=imagecreatefromgif($img);		}		elseif(eregi('.jpeg',$img)||eregi('.jpg',$img))		{		  $image=imagecreatefromjpeg($img);		}		elseif(eregi('.png',$img))		{		  $image=imagecreatefrompng($img);		}		else		{		  die("Ошибка! Неизвестное расширение изображения");		}*/		// узнаем размер изображения		$size=getimagesize($img);		// указываем координаты, где будет располагаться водный знак		/*		* $size[0] - ширина изображения		* $size[1] - высота изображения		* В нашем примере изображение размером 448x336		* Координаты соответственно будут		* $x=448-88-10=277		* $y=336-31-10=265		* - 10 -это расстояние от границы исходного изображения		*/		$cx=$size[0]-$wmW-5;		$cy=$size[1]-$wmH-5;		/*** imagecopyresampled - копирует и изменяет размеры части изображения		* с пересэмплированием		*/		imagecopyresampled ($image, $wm, $cx, $cy, 0, 0, $wmW, $wmH, $wmW, $wmH);		/*** imagejpeg - создаёт JPEG-файл filename из изображения image		* третий параметр - качество нового изображение 		* параметр является необязательным и имеет диапазон значений 		* от 0 (наихудшее качество, наименьший файл)		* до 100 (наилучшее качество, наибольший файл)		* По умолчанию используется значение по умолчанию IJG quality (около 75)		*/		imagejpeg($image,$img,90);		// imagedestroy - освобождает память		imagedestroy($image);		imagedestroy($wm);		// на всякий случай		unset($image,$img);				}				//	// Изменение визитной фотографии пользователя	//	public function VisFoto($user,$nameFoto)	{			//создаем путь к фото			$path = strstr($user['dirUs'].'/'.$nameFoto, "Foto/");								//проверяем есь ли визитная фотка			if ($user['VisFoto'] =='Foto/nofoto.jpg' ) { //Foto/nofoto.jpeg ; //путь к файлу - нет фото				$this->ChangeVisFoto($user['id_user'],$path,0);			}				if ($user['MinFoto'] =='Foto/nofotoMin.jpg' ) {//добавляем путь к  миниатюре виз. фото в таблицу юзера				//создаем путь к мини фото				$pathMin = strstr($user['dirUs'].'/mini/'.$nameFoto, "Foto/");					//добавляем путь к  миниатюре виз. фото в таблицу юзера				$this->ChangeVisFoto($user['id_user'],0,$pathMin);					}				}		//	// изменение визитной фото у пользователя (из C_Profile)	//	public function ChangeVisFoto($id_user,$file,$fileMin)	{				$object = array();		if($file != '0'){			$object['VisFoto'] = $file;			}				if($fileMin != '0'){			$object['MinFoto'] = $fileMin;		}						$t = "id_user = '%d'";				$where = sprintf($t, $id_user);						  		$this->msql->Update('users',$object,$where);		return true;	}			//	// достаем описание фотки и коменты к ней	//	public function GetPictureDescr($id_user,$path)	{		$path = mysql_real_escape_string($path. '');		$id_user = sprintf("%d", 						$id_user);							$query = "SELECT comment FROM Foto_name WHERE id_user = '$id_user' AND Foto_name = '$path'";					$a = $this->msql->Select($query);					$descrip = $a['0']['comment'];	return $descrip;	}			//	// достаем описание фотки и коменты к ней	//	public function GetNumComm($id_user,$path,$table,$id_yakor ='')	{		$path = mysql_real_escape_string($path. '');		$table = mysql_real_escape_string($table. '');		$id_user = sprintf("%d", 						$id_user);													$query = "SELECT count(*) FROM Foto_name f 					INNER JOIN $table c ON f.id_foto =c.id_foto 										WHERE f.id_user = '$id_user' AND f.Foto_name = '$path' "; //ORDER BY c.id_foto_com DESC" ;											if($id_yakor !=''){//если мы вытаскиваем значения по якорю						$id_comment = sprintf("%d", $id_yakor);						$query .= " AND c.id_foto_com > '$id_yakor' ";					}															$count = $this->msql->Select($query) or die(mysql_error());							return $count[0]['count(*)'];	}				//	// проверка есть ли такое сообщение в указанной  фотографии	//	public function CheckComment($id_user,$path,$id_comment,$table)	{		//die('fffffffffffffffffff'.$id_comment);		$path = mysql_real_escape_string($path. '');		$id_user = sprintf("%d", 						$id_user);													$query = "SELECT * FROM Foto_name f 					INNER JOIN $table c ON f.id_foto =c.id_foto 										WHERE f.id_user = '$id_user' AND f.Foto_name = '$path' AND c.id_foto_com = '$id_comment' " ;						$count = $this->msql->Select($query);		//die(var_dump($count));					return $count;	}		//	// достаем описание фотки и коменты к ней в пределах	//	public function GetPictureComm($id_user,$path,$start,$num,$table)	{		$path = mysql_real_escape_string($path. '');		$table = mysql_real_escape_string($table. ''); //		$id_user = sprintf("%d", $id_user);		$start = sprintf("%d", $start);//		$num = sprintf("%d", $num);//									/*$query = "SELECT comment FROM Foto_name WHERE id_user = '$id_user' AND Foto_name = '$path'";					$a = $this->msql->Select($query);					$descrip['descr'] = $a['0']['comment'];*/					if($table == '2d_Foto_comments') $ma = ',c.maska'; else $ma = '';												$query = "SELECT c.foto_comment,c.id_user,c.date,c.id_foto_com $ma FROM Foto_name f 					INNER JOIN $table c ON f.id_foto =c.id_foto 										WHERE f.id_user = '$id_user' AND f.Foto_name = '$path'   ORDER BY c.id_foto_com  LIMIT $start, $num" ;						$comments = $this->msql->Select($query);							return $comments;	}				//	// работа с описанием фотки	//	public function ChangeDescrPicture($action,$id_user,$path,$descr ='')	{		$descr = trim($descr);		//$descr = htmlspecialchars($descr);		//$id_user = sprintf("%d", 				//				$id_user);		//создаем путь до миниатюры		$y = explode("/",$path);		$pathMin = $y['0'].'/'.$y['1'].'/mini/'.$y['2'];		$path = mysql_real_escape_string($path. '');					$pathMin = mysql_real_escape_string($pathMin. '');			$t = "id_user = '%d' AND Foto_name = '$path'";				$where = sprintf($t, $id_user);						//$path = mysql_real_escape_string($path. '');		//$pathMin = mysql_real_escape_string($pathMin. '');		//return $pathMin;						$object['id_user '] = $id_user ;						$object['Foto_name'] = $path ;						$object['Min_foto_name'] = $pathMin;						$object['comment'] = $descr;										Switch ($action) {		case 'get': //достаем описание 						$query = "SELECT id_foto FROM Foto_name WHERE $where";					$id = $this->msql->Select($query);					if(!isset($id['0']['id_foto'])){						//добавляем фото						return  $this->msql->Insert('Foto_name',$object);						}					return $id['0']['id_foto'];break;		case 'change': //меняем описание 						$res = $this->msql->Update('Foto_name',$object,$where);					//если обновить не удалось(нет картинки)					if(!$res){						//добавляем фото						return  $this->msql->Insert('Foto_name',$object);										}					return true;break;		case 'del': //удаляем описание 						//достаем id					$query = "SELECT id_foto FROM Foto_name WHERE $where";					$id = $this->msql->Select($query);					//return $id;					if(isset($id['0']['id_foto'])){						//удаляем фото												$this->msql->Delete('Foto_name',$where);						return $id['0']['id_foto'];//$this->msql->Insert('Foto_name',$object);						}else{return false;}					break;		}		return false;	}		//	// работа с коментариями фоток	//	public function ChangeCommentPicture($action,$id_foto,$maska='',$table='',$comment = '',$id_user='')	{		$id_foto = sprintf("%d", $id_foto);		$id_user = sprintf("%d", $id_user);		$table = mysql_real_escape_string($table. ''); //						//$comment = htmlspecialchars($comment);						Switch ($action) {		case 'add': //добавляем коммент к фото						// Проверка.					if ($comment == '')					return false;									if ($table =='2d_Foto_comments') 					$object['maska'] = $maska;																//добавляем коммент к фото					$object['id_foto '] = $id_foto ;					$object['foto_comment'] = $comment ;					$object['id_user'] = $id_user ;					$object['date'] = date('Y-m-d H:i:s');					return  $this->msql->Insert($table,$object);break;			case 'delAll': //удаляем все комменты						$ta = array();					if($table==''){//закидываем в массив обе таблицы						$ta[] = 'Foto_comments';						$ta[] = '2d_Foto_comments';					}else{						$ta[] = $table;					}					foreach($ta as $taa){						$t = "id_foto = '%d'";								$where = sprintf($t, $id_foto);							$this->msql->Delete($taa,$where);					}					return true;break;			}					}		//	// считывание фоток из каталога	//	public function GetAllMiniF($dirF)	{		// Открыть заведомо существующий каталог и начать считывать его содержимое		if (is_dir($dirF)) {			if ($dh = opendir($dirF)) {			//echo"est-----------------";								while (($file = readdir($dh)) !== false) {					//убираем директории					if((filetype($dirF.'/'.$file) == 'file') AND ($file != 'Thumbs.db'	))						$fotoArr[] = strstr($dirF.'/'.$file, "Foto/");						//$fotoArr = $this->date['anketa']['dirUs'].'/'.$file;												//print "Файл: $file : тип: ".filetype($this->date['anketa']['dirUs'].'/'.$file)."\n<br />";				}			closedir($dh);			}			return $fotoArr;		}else{			return false;		}	}	//	// вытаскиваем описание каждой фотки для массива	//	public function GetAllMiniFDescr($id_user,$f)	{		$id_user = sprintf("%d", 						$id_user);				//создаем строку для запроса		for ($i=0; $i<count($f);$i++){			if ($i != (count($f)-1) ){				$str.= "'".$f[$i]."',";			}else{				$str.="'".$f[$i]."'";			}		}		$query = "SELECT Min_foto_name,comment FROM Foto_name WHERE id_user = $id_user AND Min_foto_name in ($str)";		$fotoArr = $this->msql->Select($query);					//сравниваем два массива и переносим описания на другой			for ($i=0; $i<count($fotoArr);$i++){				$k = array_search($fotoArr[$i]['Min_foto_name'],$f);				$f1[$k] =  $fotoArr[$i]['comment'];			}						//пробегаемся по массиву $f			for ($i=0; $i<count($f);$i++){				if (isset($f1[$i])){					$f2[$i]['foto'] = $f[$i];					if($f1[$i] == ''){						$f2[$i]['descr'] = 'без описания';					}else{						$f2[$i]['descr'] = $this->myutf8_substr2($f1[$i],0,14).'...';						}														}else{					$f2[$i]['foto'] = $f[$i];					$f2[$i]['descr'] = 'без описания';					}			}		unset ($f); 						unset ($f1); 		unset ($fotoArr);	return $f2;				}			//	//Короткое описание фотографии	//	public function myutf8_substr2($str,$from,$len){ 	return preg_replace('#^(?:[\x00-\x7F]|[\xC0-\xFF][\x80-\xBF]+){0,'.$from.'}'. '((?:[\x00-\x7F]|[\xC0-\xFF][\x80-\xBF]+){0,'.$len.'}).*#s', '$1',$str); 	} 						//	//удаление папки пользователя и фоток	//	function full_del_dir($directory)	{		$dir=opendir($directory);		while(($file=readdir($dir)))		{		 if(is_file("$directory/$file")) {unlink("$directory/$file");		}		 else if(is_dir("$directory/$file") && $file!="." && $file!="..") 		 {		 $this->full_del_dir("$directory/$file");		 }		 }		closedir($dir);		rmdir($directory);	return "Директория удалена";	}		//	//удаление фото маски	//	function del_fotoMask($foto,$id_user)	{	$id_user = sprintf("%d",$id_user);	//die($GLOBALS['dir']."/".$foto);		 if(is_file($GLOBALS['dir']."/".$foto)) {unlink($GLOBALS['dir']."/".$foto);}	//return "Директория удалена";		//Изменение фотграфии маски у пользователя 		$this->mUsers->ChangeUsersSettings($id_user,'MaskFoto','');	}		//	//удаление всех коментариев к фоткам и описаний	//	function fullDescrDell($id_user)	{		//вытаскиваем все id фоток и удаляем их в Foto_comments		$id_user = sprintf("%d", $id_user);		$query = "SELECT id_foto FROM Foto_name WHERE id_user = $id_user";		$fotos = $this->msql->Select($query);				foreach ($fotos as $foto){			$this->ChangeCommentPicture('delAll',$foto['id_foto']);		}				//удаляем описания фоток и коментарии польз-ля к чужим фоткам		$t = "id_user = '%d'" ;			$where = sprintf($t, 						$id_user);             		$this->msql->Delete('Foto_name',$where);		$this->msql->Delete('Foto_comments',$where);		$this->msql->Delete('2d_Foto_comments',$where);		return true;	}		//	//получение массива фотографий -мини в ссесию	//	function get_SessionFotoARR($dirF,$id_user){				//все из с_анкета				//$this->date['fotoArr'] = $this->m_Foto->GetAllMiniF($dirF);				/*$fotoArr*/ $_SESSION['fotoArr'] = $this->GetAllMiniF($dirF);				/*var_dump($fotoArr);*/				//$_SESSION['fotoArr'] = $this->date['fotoArr'];	//для перехода на контроллер с фото											//echo"rrrrrrrrrrrrrrrrrrr";							//var_dump($_SESSION['fotoArr']);							//echo"rrrrrrrrrrrrrrrtttttttttttt";							if(/*$fotoArr*/$_SESSION['fotoArr'])							/*$this->date['fotoArr']*/$_SESSION['fotoArr'] = $this->GetAllMiniFDescr($id_user,$_SESSION['fotoArr']);							//var_dump($fotoArr);										//$_SESSION['fotoArr'] = $this->date['fotoArr'];	//для перехода на контроллер с фото						//$_SESSION['id_user'] = $this->date['anketa']['id_user'];	//для перехода на контроллер с фото				//echo 'fotoArr';				/*var_dump($_SESSION['fotoArr']);*/			}		//	// Добавление полей - урл и дата(через месяц) после добавления банера в тему	//	public function AddUrlDateBanner($url,$thema,$forum)	{		// Подготовка.		$url = trim($url);		$url = mysql_real_escape_string($url);		$date = date('Y-m-d H:i:s', time() + 60 * 60 * 24 * 30); //ч/з месяц		// Проверка.		$object = array();				$object['url_ban'] = $url;		$object['date_ban'] = $date;				if($thema == 0) die();		if($forum == 0){ 			$table = "s_organizations";			$t = "id_org = '%d'";					$where = sprintf($t, $thema);			}else{			$table = "Organ_groupN";			$t = "id_organ = '%d' AND id_groupN = '%d'";					$where = sprintf($t, $thema, $forum);					}				$this->msql->Update($table,$object,$where);		return true;		}	}